<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.musicpan.mapper.MusicMapper">

	<insert id="insert">
		INSERT INTO
			music_basic
			(
				idx
				, song
				, singer
				, releasedate
				, composer
				, lyricist
				, arranger
				, copyright
				, secright
				, stockcnt
				, updatedate
			)
		VALUES
			(
				#{idx}
				, #{song}
				, #{singer}
				, #{releasedate}
				, #{composer}
				, #{lyricist}
				, #{arranger}
				, #{copyRight}
				, #{secRight}
				, #{stockCnt}
				, now()
			)
	</insert>
	
	<update id="updateSpreadInfo">
		UPDATE
			music_basic
		SET
			recentprice = #{recentPrice}
			, recentpricetime = #{recentPriceTime}
			, buyunit = #{buyUnit}
			, buyprice = #{buyPrice}
			, sellunit = #{sellUnit}
			, sellprice = #{sellPrice}
			, updatedate = now()
		WHERE
			idx = #{idx}
	</update>
	
	<insert id="insertAuction">
		INSERT INTO
			music_auction
			(
				idx
				, auctioncnt
				, auctionunits
				, auctionstart
				, auctionlowprice
				, auctionavgprice
				, updatedate
			)
		VALUES
			(
				#{idx}
				, #{auctionCnt}
				, #{auctionUnits}
				, #{auctionStart}
				, #{auctionLowPrice}
				, #{auctionAvgPrice}
				, now()
			)
	</insert>
	
	
	<insert id="insertFee">
		INSERT INTO
			music_fee
			(
				idx
				, feemonth
				, fee
				, updatedate
			)
		VALUES
			(
				#{idx}
				, #{feeMonth}
				, #{fee}
				, now()
			)
	</insert>
	
	<insert id="insertHistory">
		INSERT INTO
			music_history
			(
				idx
				, histime
				, hisprice
				, hisunit
				, updatedate
			)
		VALUES
			(
				#{idx}
				, #{hisTime}
				, #{hisPrice}
				, #{hisUnit}
				, now()
			)
	</insert>
	
	
	<insert id="insertFeeInfo">
		INSERT INTO
			music_feeinfo
			(
				idx
				, feemonth
				, broadcast
				, transfer
				, duplication
				, performance
				, oversea
				, etc
				, updatedate
			)
		VALUES
			(
				#{idx}
				, #{feeMonth}
				, #{broadcast}
				, #{transfer}
				, #{duplication}
				, #{performance}
				, #{oversea}
				, #{etc}
				, now()
			)
	</insert>
	
	<select id="getIdx" resultType="int">
	
		SELECT
			idx
		FROM
			music_basic
	
	</select>
	
	<select id="getAuctionIdx" resultType="int">
	
		SELECT
			count(*)
		FROM
			music_auction
		WHERE
			auctioncnt = #{auctionIdx}
	</select>
	
	<select id="getAuctionAllCnt" resultType="int">
	
		SELECT
			auctioncnt
		FROM
			music_auction
	</select>
	
	
	<select id="getRecentPriceTime" resultType="date">
	
		SELECT
			recentpricetime
		FROM
			music_basic
		WHERE
			idx = #{idx}
	
	</select>
	
	<select id="getHisTime" resultType="date">
	
		SELECT
			histime
		FROM
			music_history
		WHERE
			idx = #{idx}
		ORDER BY histime DESC
		LIMIT 0,15
	
	</select>
	
	<select id="getFeeYearMonth" resultType="com.musicpan.domain.FeeYearMonthVO">
		SELECT
			YEAR(feemonth) AS year, month(feemonth) AS month
		FROM
			music_feeinfo
		ORDER BY feemonth DESC
		LIMIT 0,1
	</select>
	
	<select id="getIdxFromSongAndSinger" resultType="int">
		SELECT
			idx
		FROM
			music_basic
		WHERE
			song = #{song} AND singer = #{singer}
	</select>
	
	
	<select id="getSongTotalInfo" resultType="com.musicpan.domain.SongTotalVO">
		SELECT
			*
		FROM
			music_mview
		ORDER BY singer asc
	</select>
	
	
	<select id="getTauPick" resultType="com.musicpan.domain.SongTotalVO">
	<![CDATA[
		SELECT
			*
		FROM
			music_mview
		WHERE
			(avg3/sellprice*100) > 7
			AND	(avg6/sellprice*100) > 7
			AND	(avg12/sellprice*100) > 7
			AND	(avgall/sellprice*100) > 7
			AND	alltime > 48
			AND	cvall < 0.7
			AND	cv12 < 0.7
	]]>
	</select>
	
	
	
	
	<select id="getTxVol20m" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -20 minute) AND NOW()
		GROUP BY h.idx
		ORDER BY vol DESC
		LIMIT 0,10
	</select>
	<select id="getTxVol1h" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 hour) AND NOW()
		GROUP BY h.idx
		ORDER BY vol DESC
		LIMIT 0,10
	</select>
	<select id="getTxVol4h" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -4 hour) AND NOW()
		GROUP BY h.idx
		ORDER BY vol DESC
		LIMIT 0,10
	</select>
	<select id="getTxVol24h" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 day) AND NOW()
		GROUP BY h.idx
		ORDER BY vol DESC
		LIMIT 0,10
	</select>
	<select id="getTxVolWeek" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 WEEK) AND NOW()
		GROUP BY h.idx
		ORDER BY vol DESC
		LIMIT 0,10
	</select>
	<select id="getTxVolMonth" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 month) AND NOW()
		GROUP BY h.idx
		ORDER BY vol DESC
		LIMIT 0,10
	</select>
	
	
	
	<select id="getTxUnit20m" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -20 minute) AND NOW()
		GROUP BY h.idx
		ORDER BY units DESC
		LIMIT 0,10
	</select>
	<select id="getTxUnit1h" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 hour) AND NOW()
		GROUP BY h.idx
		ORDER BY units DESC
		LIMIT 0,10
	</select>
	<select id="getTxUnit4h" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -4 hour) AND NOW()
		GROUP BY h.idx
		ORDER BY units DESC
		LIMIT 0,10
	</select>
	<select id="getTxUnit24h" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 day) AND NOW()
		GROUP BY h.idx
		ORDER BY units DESC
		LIMIT 0,10
	</select>
	<select id="getTxUnitWeek" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 WEEK) AND NOW()
		GROUP BY h.idx
		ORDER BY units DESC
		LIMIT 0,10
	</select>
	<select id="getTxUnitMonth" resultType="com.musicpan.domain.SongTxVolVO">
		SELECT
			b.idx, b.song, b.singer, SUM(h.hisprice * h.hisunit) AS 'vol', SUM(h.hisunit) AS 'units'
		FROM
			music_history h INNER JOIN music_basic b ON h.idx=b.idx
		WHERE
			h.histime BETWEEN DATE_ADD(NOW(), INTERVAL -1 month) AND NOW()
		GROUP BY h.idx
		ORDER BY units DESC
		LIMIT 0,10
	</select>
	
	
	
	
	<select id="getHistoryIdx" resultType="com.musicpan.domain.SongHistoryVO">
		SELECT
			histime, hisprice, hisunit
		FROM
			music_history
		WHERE
			idx = #{idx}
		ORDER BY histime asc
	</select>
	
	
	<select id="getOneSong" resultType="com.musicpan.domain.SongBasicVO">
		SELECT
			*
		FROM
			music_basic
		WHERE
			idx = #{idx}
	</select>
	
	
	<insert id="insertNowAuction">
		INSERT INTO
			music_nowauction
			(
				idx
				, song
				, singer
				, totalunits
				, startprice
				, bidprice
				, bidunit
				, bidsum
				, bidgap
				, updatedate
				, txt_time_left
				, song_img3
			)
		VALUES
			(
				#{idx}
				, #{song}
				, #{singer}
				, #{totalunits}
				, #{startprice}
				, #{bidprice}
				, #{bidunit}
				, #{bidsum}
				, #{bidgap}
				, now()
				, #{txt_time_left}
				, #{song_img3}
			)
		ON DUPLICATE KEY UPDATE
			bidprice = #{bidprice}
			, bidunit = #{bidunit}
			, bidsum = #{bidsum}
			, bidgap = #{bidgap}
			, updatedate = now()
			, txt_time_left = #{txt_time_left}
			, song_img3 = #{song_img3}
	</insert>
	
	<select id="getIdxNowAuction" resultType="int">
		SELECT
			idx
		FROM
			music_nowauction
	</select>
	
	<delete id="deleteByIdxNowAuction">
		delete from
			music_nowauction
		where
			idx = #{idx}
	</delete>
	
	<select id="getRecentUpdatedateBasic" resultType="date">
		SELECT
			updatedate
		FROM
			music_basic
		ORDER BY
			updatedate desc
		LIMIT 0,1
	</select>
	
	
	<select id="getOneNowAuction" resultType="com.musicpan.domain.NowAuctionVO">
		SELECT
			*
		FROM
			music_nowauction
		ORDER BY
			idx asc
		LIMIT 0,1
	</select>
	
	
	<select id="getAllNowAuction" resultType="com.musicpan.domain.NowAuctionVO">
		SELECT
			*
		FROM
			music_nowauction
		ORDER BY
			idx asc
	</select>
</mapper>
